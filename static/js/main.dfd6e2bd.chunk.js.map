{"version":3,"sources":["pokedex.png","components/layout/NavBar.js","loading-wheel.gif","components/pokemon/PokemonCard.js","components/layout/Pagination.js","components/pokemon/PokemonList.js","components/layout/Dashboard.js","components/pokemon/Pokemon.js","pokeball.png","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","src","pokedex","alt","style","height","Sprite","styled","img","Card","div","StyledLink","Link","PokemonCard","pokemon","url","useState","setSprite","loadImage","setLoadImage","tooManyRequests","setTooManyRequests","didMount","setDidMount","split","length","indexNum","useEffect","axios","get","then","res","data","sprites","front_default","to","width","gif","pokeData","id","onLoad","onError","display","Name","toLowerCase","map","letter","charAt","toUpperCase","substring","join","Pagination","goToNextPage","goToPrevPage","type","onClick","marginBottom","padding","PokemonList","setPokemon","toString","currentPageUrl","setCurrentPageUrl","loading","setLoading","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","cancel","cancelToken","CancelToken","c","results","next","previous","i","name","Dashboard","marginTop","type_colors","Bug","Dark","Dragon","Electr","Fairy","Fight","Fire","Flying","Ghost","Grass","Ground","Ice","Normal","Poison","Psychc","Rock","Steel","Water","toFixed","num","fixed","re","RegExp","match","Pokemon","props","params","undefined","setBio","setGenderRatioMale","setGenderRatioFemale","catchRate","setCatchRate","growthRate","setGrowthRate","hatchSteps","setHatchSteps","catch","err","flavor_text_entries","some","flavor","flavor_text","language","console","log","femaleRate","gender_rate","catchrate","growthrate","stepshatch","stats","abilities","weight","types","hp","attack","defense","speed","specialAttack","specialDefense","stat","def","spatk","spdef","flexDirection","backgroundColor","type1","color","type2","role","aria-valuenow","aria-valuemin","aria-valuemax","egg1","egg2","genderratio","evs","ability1","ability2","pokeMoves","moveInfo","level","loadPokemonJsx","App","background","backgroundImage","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfd6e2bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokedex.181bb93d.png\";","import React from 'react';\nimport pokedex from '../../pokedex.png';\n\nconst NavBar = () => {\n\n  return (\n    <div>\n      <nav className='navbar navbar-expand-md navbar-dark bg-dark fixed-top flex-container'>\n        <a \n          href='/pokedex/' \n          className='navbar-text navbar-brand col-sm-3 col-md-2 mr-0 align-items-center'\n        >\n          <img\n            src={pokedex}\n            alt='Pokédex Logo'\n            style={{\n              height: '40px',\n            }}\n          />\n        </a>\n      </nav>\n    </div>\n  )\n}\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/loading-wheel.72de846f.gif\";","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport gif from '../../loading-wheel.gif';\nimport pokeData from  \"../../pokeDataClean.json\"\n\nconst Sprite = styled.img`\n  width: 5em;\n  height: 5em;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n  -moz-user-select: none;\n  -website-user-select: none;\n  user-select: none;\n  -o-user-select: none;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black; \n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nconst PokemonCard = ({ pokemon, url }) => {\n  const [sprite, setSprite] = useState('')\n  const [loadImage, setLoadImage] = useState(true)\n  const [tooManyRequests, setTooManyRequests] = useState(false)\n  const [didMount, setDidMount] = useState(false)\n  const [indexNum] = useState(url.split('/')[url.split('/').length - 2])\n\n  useEffect(() => {\n    axios.get('https://pokeapi.co/api/v2/pokemon/' + pokemon)\n      .then (res => {\n        setSprite(res.data.sprites.front_default)\n      })\n      setDidMount(true);\n      return () => setDidMount(false)\n  }, [pokemon])\n\n  if (!didMount) {\n    return null;\n  }\n\n  return (\n    <div className='col-md-3 col-sm-6 mb-5'>\n      <StyledLink \n        to={`pokemon/${indexNum}`}\n        // title={`#${indexNum}:` + pokemon}\n      >\n        <Card className='card'>\n          <p className='card-header'>\n            <img \n              src='https://icon-library.com/images/small-pokeball-icon/small-pokeball-icon-4.jpg' \n              alt='Pokéball Icon'\n              width='40px'\n              height='31.75px'\n            />\n            {indexNum}\n          </p>\n          {loadImage ? (\n            <img\n              className='card-img-top rounded mx-auto d-block mt-2'\n              src={gif}\n              alt='Loading'\n              style={{\n                width: '5em',\n                height: '5em'\n              }}\n            />\n          ) : null}\n          <div className='card-body'>\n            <center>\n              <Sprite\n              className='card-img-top rounded mx-auto mt-2' \n              src={`/pokedex/sprites/${pokeData[indexNum-1].id}.png.gif`} \n              alt='Pokémon Sprite'\n              onLoad={() => setLoadImage(false)}\n              onError={() => setTooManyRequests(true)}\n              style={\n                tooManyRequests ? { display: 'block'} :\n                loadImage ? null : { display: 'block'}\n              }\n              />\n              <h6>\n                {pokeData[indexNum-1].Name\n                  .toLowerCase()\n                  .split('-')\n                  .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                  .join(' ')\n                }\n              </h6>\n            </center>\n          </div>\n        </Card>\n      </StyledLink>\n    </div>\n  )\n  \n}\n\nexport default PokemonCard","import React from 'react';\nimport { ChevronDoubleLeft, ChevronDoubleRight } from 'react-bootstrap-icons';\n\nconst Pagination = ({ goToNextPage, goToPrevPage }) => {\n  return (\n    <div className='mx-auto'>\n      {/* this method is another way in which you can perform an IF gate in React: put the variable you want to check in front and then render everything after the ampersands. The second section will never be run if the first section results false */}\n      {\n        goToPrevPage && \n        <button\n          className='badge badge-pill badge-danger'\n          type='button'\n          onClick={goToPrevPage}\n          style={{\n            marginBottom: '20px',\n            padding: '10px'\n          }}\n        >\n          <ChevronDoubleLeft />\n        </button>\n      }\n      <span>\n        &nbsp;&nbsp;&nbsp;\n      </span>\n      {\n        goToNextPage && \n        <button\n          className='badge badge-pill badge-danger'\n          type='button'\n          onClick={goToNextPage}\n          style={{\n            marginBottom: '20px',\n            padding: '10px'\n          }}\n        >\n          <ChevronDoubleRight />\n        </button>\n      }\n    </div>\n  )\n}\n\nexport default Pagination","import React, { useState, useEffect } from 'react';\nimport PokemonCard from './PokemonCard';\nimport Pagination from '../layout/Pagination';\nimport axios from 'axios';\n\nconst perPage = 48;\n\nconst PokemonList = () => {\n  const [pokemon, setPokemon] = useState([])\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon?limit='+perPage.toString())\n  const [loading, setLoading] = useState(true)\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n      // to avoid a race condition (in the event the user calls multiple times before request completes), we need to use a cancelToken so requests are not overridden. cancelToken is built into axios.\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      // change loading setting to false since initial loading setting is true - telling the app that the page needs to be loaded\n      setLoading(false)\n      // console.log(res.data.results)\n      setPokemon(res.data.results)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n    })\n\n    return () => cancel()\n    \n    // every time currentPageUrl changes, this will trigger the useEffect hook and refresh the application\n  }, [currentPageUrl])\n\n  const goToNextPage = () => {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  const goToPrevPage = () => {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if (loading) return \"Loading Your Pokémon...\"\n\n  return (\n    <>\n      {pokemon ? (\n        <div className='row'>\n          {pokemon.map((i) => (\n            <PokemonCard\n              key={i.name} \n              pokemon={i.name}\n              url={i.url}\n            />\n          ))}\n        </div>\n      ) : (\n        <h1>Loading</h1>\n      )}\n        <div className='row'>\n          <Pagination\n            goToNextPage={nextPageUrl ? goToNextPage : null}\n            goToPrevPage={prevPageUrl ? goToPrevPage : null}\n          />\n        </div>  \n    </>\n  )\n}\n\nexport default PokemonList","import React from 'react';\nimport PokemonList from '../pokemon/PokemonList';\n\nconst Dashboard = () => {\n  return (\n    <div className='row'>\n      <div \n        className='col'\n        style={{\n          marginTop: '25px'\n        }}\n      >\n        <PokemonList />\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Dashboard\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport gif from '../../loading-wheel.gif';\nimport pokeData from  \"../../pokeDataClean.json\"\nimport pokeMoves from \"../../pokeMovesClean.json\"\n\nconst type_colors = {\n  Bug: 'B1C12E',\n  Dark: '4F3A2D',\n  Dragon: '755EDF',\n  Electr: 'FCBC17',\n  Fairy: 'F4B1F4',\n  Fight: '823551D',\n  Fire: 'E73B0C',\n  Flying: 'A3B3F7',\n  Ghost: '6060B2',\n  Grass: '74C236',\n  Ground: 'D3B357',\n  Ice: 'A3E7FD',\n  Normal: 'C8C4BC',\n  Poison: '934594',\n  Psychc: 'ED4882',\n  Rock: 'B9A156',\n  Steel: 'B5B5C3',\n  Water: '3295F6'\n};\n\nfunction toFixed(num, fixed) {\n    var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n    return num.toString().match(re)[0];\n}\n\nconst Pokemon = (props) => {\n  const { match } = props\n  const { params } = match\n  const { indexNum } = params\n  \n  const [pokemon, setPokemon] = useState(undefined)\n  const [bio, setBio] = useState('')\n  const [genderRatioMale, setGenderRatioMale] = useState(0)\n  const [genderRatioFemale, setGenderRatioFemale] = useState(0)\n  const [catchRate, setCatchRate] = useState(0)\n  const [growthRate, setGrowthRate] = useState('')\n  const [hatchSteps, setHatchSteps] = useState(0)\n\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${indexNum}/`)\n      .then (res => {\n        const { data } = res\n        // console.log(data)\n        setPokemon(data)\n      })\n      .catch(err => {\n        setPokemon(false)\n      })\n  }, [indexNum])\n\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon-species/${indexNum}/`)\n      .then(res => {\n        const { data } = res\n        let description = '';\n        // console.log(data)\n        data.flavor_text_entries\n          .some(flavor => {\n            const { flavor_text, language } = flavor\n            const { name } = language\n            if (name === 'en') {\n              description = flavor_text\n              // console.log(description)\n              setBio(description)\n            }\n            const affirm1 = console.log('Description set as state for bio')\n            return affirm1\n          })\n\n        const femaleRate = data.gender_rate\n        setGenderRatioFemale(12.5 * femaleRate)\n        setGenderRatioMale(12.5 * (8 - femaleRate))\n\n        setCatchRate(pokeData[indexNum-1].catchrate)\n\n        setGrowthRate(pokeData[indexNum-1].growthrate)\n\n        setHatchSteps(255 * (pokeData[indexNum-1].stepshatch) + 1)\n      })\n  }, [indexNum])\n\n  const loadPokemonJsx = () => {\n    const { \n      name, \n      id, \n      abilities,  \n      height, \n      weight,  \n      types, \n      stats, \n      sprites\n    } = pokemon\n\n    const front_default  = `/pokedex/sprites/${pokeData[id-1].id}.png.gif`\n    const fullImageUrl = `/pokedex/sprites/${pokeData[id-1].id}.png.gif`\n\n    let [\n      hp, \n      attack, \n      defense, \n      speed, \n      specialAttack, \n      specialDefense\n    ] = ''\n\n    stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = pokeData[id-1].hp;\n          // console.log(`HP: ${hp}`)\n          break;\n        case 'attack':\n          attack = pokeData[id-1].attack;\n          // console.log(`ATK: ${attack}`)\n          break;\n        case 'defense':\n          defense = pokeData[id-1].def;\n          // console.log(`DEF: ${defense}`)\n          break;\n        case 'speed':\n          speed = pokeData[id-1].speed;\n          // console.log(`SPEED: ${speed}`)\n          break;\n        case 'special-attack':\n          specialAttack = pokeData[id-1].spatk;\n          // console.log(`SP. ATK: ${specialAttack}`)\n          break;\n        case 'special-defense':\n          specialDefense = pokeData[id-1].spdef;\n          // console.log(`SP. DEF: ${specialDefense}`)\n          break;\n        default:\n          break;\n      }\n      const affirm2 = console.log('Variables from switch case are set')\n      return affirm2\n    })\n\t\n    return (\n      <>\n        <div \n          className='col'\n          style={{\n            marginTop: '25px'\n          }}\n        >\n          <div className='card'>\n            <div className='card-header'>\n              <div className='row'>\n                <div className='col-5'>\n                  <h5>\n                    <img \n                      src='https://icon-library.com/images/small-pokeball-icon/small-pokeball-icon-4.jpg' \n                      alt='Pokéball Icon'\n                      width='45.714px'\n                      height='36.285px'\n                    />\n                    {indexNum}\n                  </h5>\n                </div>\n                <div className='col-7'>\n                  <div \n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row-reverse'\n                    }}\n                  >\n                    <span \n                        key={pokeData[indexNum-1].type1}\n                        className='badge badge-primary badge-pill mr-1'\n                        style={{\n                          backgroundColor: `#${type_colors[pokeData[indexNum-1].type1\n                            .toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')]}`,\n                          color: 'white'\n                        }}\n                      >\n                        {`${pokeData[indexNum-1].type1\n                            .toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')\n                          }`\n                        }\n                      </span>\n\t\t\t\t\t  <span \n                        key={pokeData[indexNum-1].type2}\n                        className='badge badge-primary badge-pill mr-1'\n                        style={{\n                          backgroundColor: `#${type_colors[pokeData[indexNum-1].type2.toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')]}`,\n                          color: 'white'\n                        }}\n                      >\n                        {`${pokeData[indexNum-1].type2\n                            .toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')\n                          }`\n                        }\n                      </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='card-body'>\n              <div className='row align-items-center'>\n                <div className='col-md-9'>\n                  <h5 className='mx-auto'>\n\t\t\t\t  <img\n                      src={ front_default }\n                      alt='Pokémon Sprite' \n                    />\n                    { pokeData[indexNum-1].Name\n                      .toLowerCase()\n                      .split('-')\n                      .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                      .join(' ')\n                    }\n                    \n                  </h5>\n                  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>HP</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${hp*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{hp}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>Attack</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${attack*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{attack}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>                  \n                  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>Defense</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${defense*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{defense}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\t\t\t\t  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>Sp. Attack</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${specialAttack*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{specialAttack}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>Sp. Defense</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${specialDefense*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{specialDefense}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row align-items-center'>\n                    <div className='col-12 col-md-3'>Speed</div>\n                    <div className='col-12 col-md-9'>\n                      <div className='progress'>\n                        <div \n                          className='progress-bar'\n                          role='progressbar'\n                          style={{\n                            width: `${speed*100/200}%`\n                          }}\n                          aria-valuenow='25'\n                          aria-valuemin='0'\n                          aria-valuemax='200'\n                        >\n                          <small>{speed}</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='row mt-2'>\n                  <div className='col'>\n                    <p className='p-2'></p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className='card-body'>\n              <h5 className='card-title text-center'>Profile</h5>\n              <div className='row'>\n                <div className='col-md-6'>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Egg Group 1:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        {pokeData[indexNum-1].egg1\n                          .toLowerCase()\n                          .split('-')\n                          .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                          .join(' ')\n                        }\n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Egg Group 2:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        {pokeData[indexNum-1].egg2\n                          .toLowerCase()\n                          .split('-')\n                          .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                          .join(' ')\n                        }\n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Catch Rate:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        { `${toFixed(catchRate*100/255,2)}%` }\n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Gender Ratio:</h6>\n                    </div>\n                    <div className='col-md-6'>\n\t\t\t\t\t<h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n\t\t\t\t\t\t{ pokeData[indexNum-1].genderratio }\n\t\t\t\t\t\t</h6>\n                    </div>\n                  </div>\n                </div>\n                <div className='col-md-6'>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Growth Rate:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        {growthRate\n                          .toLowerCase()\n                          .split('-')\n                          .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                          .join(' ')\n                        }\n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Hatch Steps:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        {hatchSteps}\n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Effort Values:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n                        {pokeData[indexNum-1].evs }\n                        \n                      </h6>\n                    </div>\n                  </div>\n                  <div className='row flex-container'>\n                    <div className='col-md-6'>\n                      <h6 style={{display: 'flex'}}>Abilities:</h6>\n                    </div>\n                    <div className='col-md-6'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n                      }}\n                      >\n\t\t\t\t\t\t{pokeData[indexNum-1].ability1.toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')}, {pokeData[indexNum-1].ability2.toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n                            .join(' ')}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\t\t\t<div className='card-body'>\n              <h5 className='card-title text-center'>Learnset</h5>\n\t\t\t  <div className='row'>\n                {pokeMoves[pokeData[indexNum-1].Name].map(moveInfo => {\t\t\t\t\t\t\n\t\t\t\t\treturn <div className='col-md-7'>\n\t\t\t\t  <div className='row flex-container'>\n\t\t\t\t\t<div className='col-md-8'>\n\t\t\t\t\t  <h6 style={{display: 'flex'}}>{`${moveInfo.name.toLowerCase()\n                            .split(' ')\n                            .map(letter => letter.charAt(0).toUpperCase() + letter.substring(1))\n\t\t\t\t\t\t\t.join(' ')}`}\n\t\t\t\t\t  </h6>\n                    </div>\n\t\t\t\t\t<div className='col-md-4'>\n                      <h6 style={{\n                        display: 'flex',\n                        flexDirection: 'row-reverse'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{moveInfo.level}\n                      </h6>\n                    </div>\n\t\t\t\t  </div>\t\n\t\t\t\t</div>})\t\t\t\t\t\n\t\t\t\t}\n\t\t\t  </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <> \n      {pokemon === undefined && \n        <img \n          src={gif}\n          alt='Loading'\n        />\n      }\n      {pokemon !== undefined && pokemon && loadPokemonJsx(pokemon)}\n      {pokemon === false && <h1> Pokémon Not Found</h1>} \n    </>\n  )\n}\n\nexport default Pokemon","export default __webpack_public_path__ + \"static/media/pokeball.22a191f1.png\";","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n// import { Modal } from 'react-bootstrap';\nimport NavBar from '../src/components/layout/NavBar';\nimport Dashboard from './components/layout/Dashboard';\nimport Pokemon from './components/pokemon/Pokemon';\nimport backgroundImage from './pokeball.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div \n        className='App' \n        style={{\n          background: `url(${backgroundImage})`\n        }}\n      >\n        <NavBar />\n        <div className='container'>\n          <Switch>\n            <Route \n              exact path='/' \n              component={Dashboard} \n            />\n            <Route \n              exact path='/pokemon/:indexNum'\n              render={(props) => <Pokemon {...props} />}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}